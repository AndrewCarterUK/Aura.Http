<?php
namespace Aura\Http;

/**
 * Test class for Headers.
 * Generated by PHPUnit on 2011-05-10 at 11:16:06.
 */
class HeadersTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Headers
     */
    protected $headers;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $this->headers = new Headers;
        MockHttp::reset();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * @todo Implement testSet().
     */
    public function testSetAndAdd()
    {
        $this->headers->set('Foo', 'bar');
        $this->headers->set('Baz', 'dib');
        $this->headers->add('Baz', 'zim');
        $actual = $this->headers->getAll();
        $expect = array (
          'Foo' => 
          array (
            0 => 'bar',
          ),
          'Baz' => 
          array (
            0 => 'dib',
            1 => 'zim',
          ),
        );
        $this->assertSame($expect, $actual);
    }

    /**
     * @todo Implement testGetAll().
     */
    public function testSetAndGetAll()
    {
        $this->headers->setAll(array(
            "Foo\r\nBar" => 'foo header',
            "baz-dib_gir" => 'baz header',
        ));
        
        $actual = $this->headers->getAll();
        $expect = array (
          'Foobar' => 
          array (
            0 => 'foo header',
          ),
          'Baz-Dib-Gir' => 
          array (
            0 => 'baz header',
          ),
        );
        
        $this->assertSame($expect, $actual);
    }
    
    /**
     * @todo Implement testSend().
     */
    public function testSend()
    {
        $this->headers->set('Foo', 'bar');
        $this->headers->set('Baz', 'dib');
        $this->headers->add('Baz', 'zim');
        $this->headers->send();
        $expect = array (
          0 => 'Foo: bar',
          1 => 'Baz: dib',
          2 => 'Baz: zim',
        );
        
        $this->assertSame(MockHttp::$headers, $expect);
    }
}
